//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess_EF.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BCMY_StockEntities : DbContext
    {
        public BCMY_StockEntities()
            : base("name=BCMY_StockEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblBusiness> TblBusinesses { get; set; }
        public virtual DbSet<TblContact> TblContacts { get; set; }
        public virtual DbSet<TblCustomerSupplier> TblCustomerSuppliers { get; set; }
        public virtual DbSet<TblNegotiation> TblNegotiations { get; set; }
        public virtual DbSet<TblOrder> TblOrders { get; set; }
        public virtual DbSet<TblOrderLine> TblOrderLines { get; set; }
        public virtual DbSet<TblProductStock> TblProductStocks { get; set; }
    
        public virtual ObjectResult<string> SP_ConfirmOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ConfirmOrder", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CreateOrder(Nullable<int> companyId, string contactFulName, string type)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var contactFulNameParameter = contactFulName != null ?
                new ObjectParameter("contactFulName", contactFulName) :
                new ObjectParameter("contactFulName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CreateOrder", companyIdParameter, contactFulNameParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_GetAllOrderViewModels_Result> SP_GetAllOrderViewModels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllOrderViewModels_Result>("SP_GetAllOrderViewModels");
        }
    
        public virtual int SP_GetContactInfo(Nullable<int> contactId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetContactInfo", contactIdParameter);
        }
    
        public virtual ObjectResult<SP_GetContactsByCustomerSupplierId_Result> SP_GetContactsByCustomerSupplierId(Nullable<int> customerSupplierId)
        {
            var customerSupplierIdParameter = customerSupplierId.HasValue ?
                new ObjectParameter("customerSupplierId", customerSupplierId) :
                new ObjectParameter("customerSupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetContactsByCustomerSupplierId_Result>("SP_GetContactsByCustomerSupplierId", customerSupplierIdParameter);
        }
    
        public virtual ObjectResult<SP_GetContactsWithCompanyNames_Result> SP_GetContactsWithCompanyNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetContactsWithCompanyNames_Result>("SP_GetContactsWithCompanyNames");
        }
    
        public virtual ObjectResult<SP_GetCustomerSuppliersByFullName_Result> SP_GetCustomerSuppliersByFullName(string fullName)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCustomerSuppliersByFullName_Result>("SP_GetCustomerSuppliersByFullName", fullNameParameter);
        }
    
        public virtual ObjectResult<SP_GetNegotiationsByOrderProductIds_Result> SP_GetNegotiationsByOrderProductIds(Nullable<int> orderId, Nullable<int> productListId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var productListIdParameter = productListId.HasValue ?
                new ObjectParameter("productListId", productListId) :
                new ObjectParameter("productListId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNegotiationsByOrderProductIds_Result>("SP_GetNegotiationsByOrderProductIds", orderIdParameter, productListIdParameter);
        }
    
        public virtual ObjectResult<SP_GetOrderlineInfoById_Result> SP_GetOrderlineInfoById(Nullable<int> orderlineId)
        {
            var orderlineIdParameter = orderlineId.HasValue ?
                new ObjectParameter("orderlineId", orderlineId) :
                new ObjectParameter("orderlineId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrderlineInfoById_Result>("SP_GetOrderlineInfoById", orderlineIdParameter);
        }
    
        public virtual ObjectResult<SP_GetOrderLinesByOrderId_Result> SP_GetOrderLinesByOrderId(Nullable<int> orderIdVal)
        {
            var orderIdValParameter = orderIdVal.HasValue ?
                new ObjectParameter("orderIdVal", orderIdVal) :
                new ObjectParameter("orderIdVal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrderLinesByOrderId_Result>("SP_GetOrderLinesByOrderId", orderIdValParameter);
        }
    
        public virtual ObjectResult<SP_GetOrderVmById_Result> SP_GetOrderVmById(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrderVmById_Result>("SP_GetOrderVmById", orderIdParameter);
        }
    
        public virtual ObjectResult<SP_GetSuccessNegotiationsByProductId_Result> SP_GetSuccessNegotiationsByProductId(Nullable<int> orderId, Nullable<int> productListId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var productListIdParameter = productListId.HasValue ?
                new ObjectParameter("productListId", productListId) :
                new ObjectParameter("productListId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSuccessNegotiationsByProductId_Result>("SP_GetSuccessNegotiationsByProductId", orderIdParameter, productListIdParameter);
        }
    
        public virtual int SP_PopulateTblProductStockForTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PopulateTblProductStockForTesting");
        }
    
        public virtual ObjectResult<SP_SaveOrderLineWithNegotiation_Result> SP_SaveOrderLineWithNegotiation(Nullable<int> productListId, Nullable<decimal> quantityVal, Nullable<decimal> pricePerItem, Nullable<decimal> totalAmountVal, string status, Nullable<System.DateTime> dateTime, Nullable<int> orderIdVal)
        {
            var productListIdParameter = productListId.HasValue ?
                new ObjectParameter("productListId", productListId) :
                new ObjectParameter("productListId", typeof(int));
    
            var quantityValParameter = quantityVal.HasValue ?
                new ObjectParameter("quantityVal", quantityVal) :
                new ObjectParameter("quantityVal", typeof(decimal));
    
            var pricePerItemParameter = pricePerItem.HasValue ?
                new ObjectParameter("pricePerItem", pricePerItem) :
                new ObjectParameter("pricePerItem", typeof(decimal));
    
            var totalAmountValParameter = totalAmountVal.HasValue ?
                new ObjectParameter("totalAmountVal", totalAmountVal) :
                new ObjectParameter("totalAmountVal", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("dateTime", dateTime) :
                new ObjectParameter("dateTime", typeof(System.DateTime));
    
            var orderIdValParameter = orderIdVal.HasValue ?
                new ObjectParameter("orderIdVal", orderIdVal) :
                new ObjectParameter("orderIdVal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SaveOrderLineWithNegotiation_Result>("SP_SaveOrderLineWithNegotiation", productListIdParameter, quantityValParameter, pricePerItemParameter, totalAmountValParameter, statusParameter, dateTimeParameter, orderIdValParameter);
        }
    
        public virtual ObjectResult<SP_SearchOrders_Result> SP_SearchOrders(Nullable<int> companyId, string contactFulName, Nullable<int> orderId, string status, string orderType, Nullable<System.DateTime> creationDateFrom, Nullable<System.DateTime> creationDateTo)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var contactFulNameParameter = contactFulName != null ?
                new ObjectParameter("contactFulName", contactFulName) :
                new ObjectParameter("contactFulName", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("orderType", orderType) :
                new ObjectParameter("orderType", typeof(string));
    
            var creationDateFromParameter = creationDateFrom.HasValue ?
                new ObjectParameter("creationDateFrom", creationDateFrom) :
                new ObjectParameter("creationDateFrom", typeof(System.DateTime));
    
            var creationDateToParameter = creationDateTo.HasValue ?
                new ObjectParameter("creationDateTo", creationDateTo) :
                new ObjectParameter("creationDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchOrders_Result>("SP_SearchOrders", companyIdParameter, contactFulNameParameter, orderIdParameter, statusParameter, orderTypeParameter, creationDateFromParameter, creationDateToParameter);
        }
    
        public virtual ObjectResult<SP_SearchOrders_Simple_Result> SP_SearchOrders_Simple()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchOrders_Simple_Result>("SP_SearchOrders_Simple");
        }
    }
}
